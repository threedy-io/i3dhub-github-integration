# Configure options relating to required authorization headers and caching.
auth:
  
  # Set any authorization header names which must be passed to data backends. 
  # These will be copied from incoming client requests and used while downloading
  # data or performing authorization requests against the backends.
  # No client headers or cookies will be forwarded to any backends by default as 
  # this could leak client credentials to arbitrary URLs.
  # If dataGateways are defined, forwardHeaders or forwardCookies fields can also be
  # defined there on a per-rule basis. This should be preferred as it is more robust
  # than regex matching URLs. 
  # In either case, rules from URN definitions are applied first, after which the 
  # regex rules defined here are applied on the URL generated by resolving the URN.
  forwardHeaders:
      - match: "http://threedy-github-gateway-service:8090/.*"
        headers: [ "Authorization"]
  # Sets a list of headers to include in any Access-Control-Allow-Headers preflight
  # responses. This is required when setting headers manually via the webvis-API. 
  # For example, if clients are required to attach credentials not in cookie form, 
  # the specfic headers must be allowed here.
  clientHeaders:
    - "Authorization"
    #- "X-Requested-With"

# Set the URN mapping rules per data gateway. See the integration documentation for
# motivation and concepts behind data gateways and URN mappings.
#
# For templates, $(n) is the n-th value in the URN separated after urn:namespace:specifier:xxx
# e.g.: urn:x-i3d:shape:sphere ($(1) == sphere)
dataGateways:
  defaultGateway:
    - namespace: github
      specifier: 3d-data
      urlContentType: [ openjt , step,stp , x3d-xml,step.ap203 ]
      urlTemplate: http://threedy-github-gateway-service:8090/githubFile/$(1)/$(2)/$(3).$(4)